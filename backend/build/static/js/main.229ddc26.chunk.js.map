{"version":3,"sources":["customLogo.png","components/User/NavigationBar.js","components/User/ItemList.js","components/User/Main.js","components/Admin/EditItem.js","components/Admin/TableView.js","placeholder.jpg","components/Admin/InsertItem.js","components/Admin/Main.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","props","Navbar","className","style","width","Col","xs","Form","InputGroup","Prepend","Text","id","FormControl","as","value","category","onChange","e","setCategory","target","type","placeholder","search","setSearch","align","Brand","alt","src","customLogo","height","paddingRight","IconButton","color","fontSize","position","right","top","Object","keys","cart","length","values","reduce","acc","val","useStyles","makeStyles","theme","customHoverFocus","backgroundColor","borderColor","border","ItemList","useState","data","setData","loaded","setLoaded","classes","useEffect","a","axios","result","fetchData","Container","maxWidth","overflowY","Row","filter","item","name","toLowerCase","includes","map","Card","Img","variant","image","Body","price","toFixed","hasOwnProperty","_id","onClick","removeFromCart","textAlign","addToCart","textTransform","endIcon","Spinner","animation","Main","setCart","itemId","newCart","JSON","parse","stringify","undefined","to","Button","EditItem","show","setShow","itemImage","setItemImage","itemName","setItemName","itemPrice","setItemPrice","itemCategory","setItemCategory","handleClose","Modal","size","onHide","onSubmit","preventDefault","newEntry","parseFloat","editData","handleSubmit","Header","Title","File","custom","Input","accept","file","files","reader","FileReader","onload","img","document","createElement","canvas","ctx","getContext","newWidth","Math","min","drawImage","dataurl","toDataURL","readAsDataURL","required","decimalsLimit","prefix","onValueChange","Footer","TableView","columns","dataField","text","formatter","cell","row","headerStyle","verticalAlign","sort","textFilter","headerFormatter","column","colIndex","sortElement","filterElement","selectFilter","options","isDummyField","deleteData","bootstrap4","keyField","filterFactory","InsertItem","placeholderImage","resetState","insertData","catch","error","console","log","post","then","res","newData","push","entry","dataIndex","findIndex","put","deletedId","delete","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.229ddc26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/customLogo.3b2eb80b.png\";","\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Form, FormControl, InputGroup, Col } from 'react-bootstrap';\r\n\r\nimport customLogo from '../../customLogo.png'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nexport default function NavigationBar(props) {\r\n    return <Navbar className='mx-auto p-0 pb-1' style={{ width: '95%' }} >\r\n        {/* DROPDOWN AND SEARCH BAR */}\r\n        <Col xs={4} className='mt-auto p-0'><Form className=\"d-flex\">\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\">Category</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl as='select' style={{ width: '100px' }} className='form-select' value={props.category}\r\n                    onChange={(e) => props.setCategory(e.target.value)}>\r\n                    <option value='All' >All Items</option>\r\n                    <option value='Drinks'>Drinks</option>\r\n                    <option value='Food'>Food</option>\r\n                    <option value='Fruits'>Fruits</option>\r\n                    <option value='Snacks'>Snacks</option>\r\n                    <option value='Others'>Others</option>\r\n                </FormControl>\r\n                <FormControl\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    style={{ width: '100px' }}\r\n                    value={props.search}\r\n                    onChange={(e) => props.setSearch(e.target.value)} />\r\n            </InputGroup>\r\n        </Form></Col>\r\n        {/* LOGO */}\r\n        <Col xs={4} align=\"center\" ><Navbar.Brand>\r\n            <img\r\n                alt=\"\"\r\n                src={customLogo}\r\n                width=\"200\"\r\n                height=\"100\"\r\n            />{' '}\r\n        </Navbar.Brand></Col>\r\n        {/* CART*/}\r\n        <Col xs={4} className='mt-auto' align='right' style={{ paddingRight: '20px' }}>\r\n            <IconButton style={{ color: '#285E37' }}>\r\n                <ShoppingCartOutlinedIcon fontSize=\"large\" />\r\n                <span style={{ position: \"absolute\", right: 3, top: 3, color: '#C70039', fontSize: '1.2rem' }}>\r\n                    {Object.keys(props.cart).length > 0 ?\r\n                        // get sum of all item quantity in cart event if they are different item types\r\n                        Object.values(props.cart).reduce(function (acc, val) { return acc + val; }, 0)\r\n                        : ''}\r\n                </span>\r\n            </IconButton>\r\n        </Col>\r\n    </Navbar >\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Spinner, Card } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Item Quantity Button Styles\r\nconst useStyles = makeStyles(theme => ({\r\n    customHoverFocus: {\r\n        \"&:hover, &.Mui-focusVisible\": {\r\n            backgroundColor: '#65b32E',\r\n            color: 'white'\r\n        },\r\n        backgroundColor: 'whitesmoke',\r\n        borderColor: '#89B765',\r\n        border: '1px solid',\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\nexport default function ItemList(props) {\r\n    const [data, setData] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    // Fetch API on component mount to display to the user\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await axios(`/api/getall`);\r\n            setData(result.data);\r\n            setLoaded(true)\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Elements\r\n    return <Container style={{ maxWidth: '95%', height: '100%', overflowY: 'auto' }} >\r\n        {loaded ?\r\n            /*Page Loaded*/\r\n            <Row>\r\n                {/* Filter first by the selected category */}\r\n                {data.filter(function (item) { return (item.category === props.category || 'All' === props.category) })\r\n                    .filter(function (item) { return (item.name.toLowerCase().includes(props.search.toLowerCase())) })\r\n                    .map(item => {\r\n                        return <Col xs={2} className=\"border p-1\" style={{ height: '250px' }}>\r\n                            <Card className='w-100 h-100'>\r\n                                {/* Image for each item */}\r\n                                <Card.Img style={{ height: '100px', width: 'auto' }} className='mx-auto mt-2' variant=\"top\" src={item.image} />\r\n                                {/* Name and Price of each item */}\r\n                                <Card.Body className=\"d-flex align-items-start flex-column pb-1\">\r\n                                    <h6 className=\"mb-auto text\">{item.name}</h6>\r\n                                    <div>S${item.price.toFixed(2)}</div>\r\n                                </Card.Body>\r\n                                {/* Buttons for Quantity Management*/}\r\n                                <div className='mx-auto mb-2 d-flex justify-content-between' style={{ width: '70%' }}>\r\n                                    {props.cart.hasOwnProperty(item._id) ?\r\n                                        <>\r\n                                            <IconButton className={classes.customHoverFocus}\r\n                                                onClick={() => props.removeFromCart(item._id)} >\r\n                                                <RemoveIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                            <span className='my-auto' style={{ textAlign: 'center', width: '100%' }}>\r\n                                                <strong>{props.cart[item._id]}</strong></span>\r\n                                            <IconButton className={classes.customHoverFocus}\r\n                                                onClick={() => props.addToCart(item._id)} >\r\n                                                <AddIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                        </>\r\n                                        : <Button style={{ width: '100%', textTransform: 'none' }}\r\n                                            className={`button-responsive ${classes.customHoverFocus}`}\r\n                                            endIcon={<AddShoppingCartIcon />}\r\n                                            onClick={() => props.addToCart(item._id)}>\r\n                                                {/* Hide words for smaller screens */}\r\n                                            <span className='d-none d-xl-block'>Add To Cart</span></Button>\r\n                                    }\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                    })}\r\n            </Row>\r\n            /*Show Page Loading*/\r\n            : <div className='h-100 w-100 d-flex'>\r\n                <Spinner className='mx-auto my-auto' animation='border' variant='success' />\r\n            </div>\r\n        }\r\n\r\n    </Container >\r\n\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport NavigationBar from './NavigationBar';\r\nimport ItemList from './ItemList';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Main() {\r\n\r\n    const [category, setCategory] = useState('All');\r\n    const [search, setSearch] = useState('');\r\n    const [cart, setCart] = useState({});\r\n\r\n    // Data Management for Cart\r\n    // Add a new item to cart\r\n    function addToCart(itemId) {\r\n        let newCart = JSON.parse(JSON.stringify(cart))\r\n        if (newCart[itemId] === undefined) {\r\n            newCart[itemId] = 1\r\n        } else {\r\n            newCart[itemId] += 1\r\n        }\r\n        setCart(newCart)\r\n    }\r\n    // Remove an item from cart\r\n    function removeFromCart(itemId) {\r\n        let newCart = JSON.parse(JSON.stringify(cart))\r\n        if (newCart.hasOwnProperty(itemId)) {\r\n            newCart[itemId] -= 1\r\n            if (newCart[itemId] <= 0) {\r\n                delete newCart[itemId];\r\n            }\r\n        }\r\n        setCart(newCart)\r\n    }\r\n\r\n    // Elements\r\n    return <div style={{ height: '100vh', width: '100vw' }} className=\"d-flex align-items-start flex-column\" >\r\n\r\n        <NavigationBar setCategory={setCategory} category={category} setSearch={setSearch} search={search} cart={cart} />\r\n        <ItemList category={category} search={search} cart={cart} addToCart={addToCart} removeFromCart={removeFromCart} />\r\n        <Link to=\"/admin\">\r\n            <Button style={{ position: 'absolute', top: '10px', right: '10px' }}\r\n                variant='outline-success'> Go To Admin View</Button>\r\n        </Link>\r\n    </div>\r\n\r\n};\r\n","import { Button, Modal, Form, Card, InputGroup, FormControl } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport CurrencyInput from 'react-currency-input-field';\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\nexport default function EditItem(props) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [itemImage, setItemImage] = useState();\r\n    const [itemName, setItemName] = useState();\r\n    const [itemPrice, setItemPrice] = useState();\r\n    const [itemCategory, setItemCategory] = useState();\r\n\r\n    // Set Modal State to the last item clicked\r\n    const handleShow = () => {\r\n        setShow(true)\r\n        setItemImage(props.data.image)\r\n        setItemName(props.data.name)\r\n        setItemPrice(props.data.price)\r\n        setItemCategory(props.data.category)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n    };\r\n\r\n    // On submit\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setShow(false)\r\n        let newEntry = {\r\n            _id: props.data._id,\r\n            name: itemName,\r\n            category: itemCategory,\r\n            image: itemImage,\r\n            price: parseFloat(itemPrice)\r\n        }\r\n        props.editData(newEntry)\r\n    }\r\n\r\n    // Elements\r\n    return (\r\n        <>\r\n            <Button onClick={handleShow} className='px-1 pt-0 pb-1 mx-1' style={{ borderColor: 'grey' }} variant=\"outline-dark\"><FaEdit /></Button>\r\n\r\n            <Modal size=\"md\"\r\n                show={show} onHide={handleClose} animation={false}>\r\n                <Form onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                    <Modal.Header>\r\n                        <Modal.Title>Edit Item</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* Image View */}\r\n                        <Card.Img style={{ height: '100px', width: 'auto' }} className='mx-auto' variant=\"top\" src={itemImage} />\r\n                        {/* Image Upload */}\r\n                        <Form.File className=\"mt-2\" custom>\r\n                            <Form.File.Input accept=\"image/*\" onChange={(e) => {\r\n                                const [file] = e.target.files;\r\n                                if (file) {\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = (e) => {\r\n                                        var img = document.createElement(\"img\");\r\n                                        img.onload = () => {\r\n                                            // Resizing to save space in DB\r\n                                            var canvas = document.createElement('canvas');\r\n                                            var ctx = canvas.getContext(\"2d\");\r\n                                            var MAX_WIDTH = 125;\r\n\r\n                                            let newHeight = 100\r\n                                            var width = img.width;\r\n                                            var height = img.height;\r\n                                            let newWidth = Math.min((width / height) * newHeight, MAX_WIDTH)\r\n\r\n\r\n                                            canvas.width = newWidth;\r\n                                            canvas.height = newHeight;\r\n                                            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n                                            var dataurl = canvas.toDataURL(\"image/png\");\r\n                                            setItemImage(dataurl)\r\n                                        }\r\n                                        img.src = e.target.result;\r\n                                    }\r\n                                    reader.readAsDataURL(file)\r\n                                }\r\n                            }\r\n                            } />\r\n                        </Form.File>\r\n                        {/* Item Name */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\">Item Name</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={itemName} onChange={(e) => setItemName(e.target.value)} required />\r\n                        </InputGroup>\r\n                        {/* Item Category */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\">Item Category</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl as='select' className='form-select' onChange={(e) => setItemCategory(e.target.value)} value={itemCategory}>\r\n                                <option value='Drinks'>Drinks</option>\r\n                                <option value='Food'>Food</option>\r\n                                <option value='Fruits'>Fruits</option>\r\n                                <option value='Snacks'>Snacks</option>\r\n                                <option value='Others'>Others</option>\r\n\r\n                            </FormControl>\r\n                        </InputGroup>\r\n                        {/* Item Price */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <CurrencyInput\r\n                                className='w-100'\r\n                                placeholder=\"S$\"\r\n                                decimalsLimit={2}\r\n                                prefix='S$'\r\n                                value={itemPrice}\r\n                                onValueChange={(value) => {\r\n                                    setItemPrice(value)\r\n                                }} required />\r\n                        </InputGroup>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"success\" type='submit'>Update Item</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { FaTrash } from 'react-icons/fa';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter, selectFilter} from 'react-bootstrap-table2-filter';\r\nimport EditItem from './EditItem';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport default function TableView(props) {\r\n    const columns = [\r\n        // IMAGE COLUMN\r\n        {\r\n            dataField: 'image',\r\n            text: 'Image',\r\n            formatter: (cell, row) => {\r\n                return <div className='w-100 mx-auto'>\r\n                    <img alt='item' style={{ height: '40px', width: 'auto' }} src={cell} className=\"img-thumbnail mx-auto\" />\r\n                </div>;\r\n            },\r\n            style: { textAlign: 'center' },\r\n            headerStyle: { width: '70px', textAlign: 'center', verticalAlign: 'middle' }\r\n        },\r\n        // ID COLUMN\r\n        {\r\n            dataField: '_id',\r\n            text: 'ID',\r\n            classes: 'wrapword',\r\n            style: { textAlign: 'center' },\r\n            headerStyle: { width: '230px', verticalAlign: 'middle' },\r\n        },\r\n        // NAME COLUMN\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name',\r\n            headerStyle: { verticalAlign: 'middle' },\r\n            sort: true,\r\n            filter: textFilter()\r\n        },\r\n        // PRICE COLUMN\r\n        {\r\n            dataField: 'price',\r\n            text: 'Price',\r\n            style: { textAlign: 'center' },\r\n            headerStyle: { width: '120px', textAlign: 'center', verticalAlign: 'middle' },\r\n            formatter: (cell, row) => {\r\n                return <span>{cell.toFixed(2)}</span>\r\n            },\r\n            headerFormatter: (column, colIndex, { sortElement, filterElement }) => {\r\n                return (\r\n                    <div className='h-100'>\r\n                        <span className='mb-auto'>\r\n                            {column.text} {sortElement}\r\n                        </span>\r\n                        {filterElement}\r\n                    </div>\r\n                );\r\n            },\r\n            sort: true\r\n        },\r\n        // CATEGORY COLUMN\r\n        {\r\n            dataField: 'category',\r\n            text: 'Category',\r\n            style: { textAlign: 'center' },\r\n            headerStyle: { width: '280px', textAlign: 'center', verticalAlign: 'middle' },\r\n            filter: selectFilter({\r\n                options: {\r\n                    'Drinks': 'Drinks',\r\n                    'Food': 'Food',\r\n                    'Fruits': 'Fruits',\r\n                    'Snacks': 'Snacks',\r\n                    'Others': 'Others'\r\n                }\r\n            }),\r\n        },\r\n        // ACTION COLUMN\r\n        {\r\n            dataField: 'dummy',\r\n            isDummyField: true,\r\n            text: 'Action',\r\n            style: { textAlign: 'center' },\r\n            headerStyle: { width: '100px', textAlign: 'center', verticalAlign: 'middle' },\r\n            formatter: (cell, row) => {\r\n                return <><EditItem data={row} editData={props.editData} />\r\n                    <Button className='px-1 pt-0 pb-1 mx-1' variant=\"outline-dark\"\r\n                        style={{ borderColor: 'grey' }}\r\n                        onClick={() => props.deleteData(row._id)}\r\n                    ><FaTrash /></Button></>\r\n            }\r\n        }];\r\n    return <BootstrapTable bootstrap4 keyField='_id' data={props.data} columns={columns} filter={filterFactory()} />\r\n\r\n\r\n};\r\n","export default __webpack_public_path__ + \"static/media/placeholder.39a842d0.jpg\";","import { Button, Modal, Form, Card, InputGroup, FormControl } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport placeholderImage from '../../placeholder.jpg'\r\nimport CurrencyInput from 'react-currency-input-field';\r\n\r\nexport default function InsertItem(props) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [itemImage, setItemImage] = useState(placeholderImage);\r\n    const [itemName, setItemName] = useState('Item Name');\r\n    const [itemPrice, setItemPrice] = useState('');\r\n    const [itemCategory, setItemCategory] = useState('Others');\r\n\r\n    // Reset State (Clear inputs when user hides the modal)\r\n    function resetState() {\r\n        setShow(false)\r\n        setItemImage(placeholderImage)\r\n        setItemName('Item Name')\r\n        setItemPrice('')\r\n        setItemCategory('Others')\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => {\r\n        resetState()\r\n    };\r\n    // On submit\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setShow(false)\r\n        let newEntry = {\r\n            name: itemName,\r\n            category: itemCategory,\r\n            image: itemImage,\r\n            price: parseFloat(itemPrice)\r\n        }\r\n        resetState();\r\n        props.insertData(newEntry)\r\n    }\r\n    // Elements\r\n    return (\r\n        <>\r\n            {/* Button for user to open Create Item Modal */}\r\n            <Button className='my-1' variant=\"success\" onClick={handleShow}>\r\n                Add New Item\r\n            </Button>\r\n\r\n            <Modal size=\"md\"\r\n                show={show} onHide={handleClose} animation={false}>\r\n                <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Add New Item</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* Image View */}\r\n                        <Card.Img style={{ height: '100px', width: 'auto' }} className='mx-auto' variant=\"top\" src={itemImage} />\r\n                        {/* Image Upload */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <input type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                const [file] = e.target.files;\r\n                                if (file) {\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = (e) => {\r\n                                        var img = document.createElement(\"img\");\r\n                                        img.onload = () => {\r\n                                            // Resizing to save space in DB\r\n                                            var canvas = document.createElement('canvas');\r\n                                            var ctx = canvas.getContext(\"2d\");\r\n                                            var MAX_WIDTH = 125;\r\n                                            let newHeight = 100\r\n                                            var width = img.width;\r\n                                            var height = img.height;\r\n                                            let newWidth = Math.min((width / height) * newHeight, MAX_WIDTH)\r\n                                            canvas.width = newWidth;\r\n                                            canvas.height = newHeight;\r\n                                            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n                                            var dataurl = canvas.toDataURL(\"image/png\");\r\n                                            setItemImage(dataurl)\r\n                                        }\r\n                                        img.src = e.target.result;\r\n                                    }\r\n                                    reader.readAsDataURL(file)\r\n                                }\r\n                            }\r\n                            } required />\r\n                        </InputGroup>\r\n                        {/* Item Name */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\">Item Name</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl onChange={(e) => setItemName(e.target.value)} required />\r\n                        </InputGroup>\r\n                        {/* Item Category */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\">Item Category</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl as='select' className='form-select'\r\n                                onChange={(e) => setItemCategory(e.target.value)} value={itemCategory}>\r\n                                <option value='Drinks'>Drinks</option>\r\n                                <option value='Food'>Food</option>\r\n                                <option value='Fruits'>Fruits</option>\r\n                                <option value='Snacks'>Snacks</option>\r\n                                <option value='Others'>Others</option>\r\n\r\n                            </FormControl>\r\n                        </InputGroup>\r\n                        {/* Item Price */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <CurrencyInput\r\n                                className='w-100'\r\n                                placeholder=\"S$\"\r\n                                decimalsLimit={2}\r\n                                prefix='S$'\r\n                                onValueChange={(value) => {\r\n                                    setItemPrice(value)\r\n                                }} required />\r\n                        </InputGroup>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"success\" type='submit'>Add Item</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Spinner, Col, Row, Button } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport TableView from './TableView';\r\nimport InsertItem from './InsertItem';\r\nimport { Link } from \"react-router-dom\";\r\nimport customLogo from '../../customLogo.png'\r\nexport default function Main() {\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [data, setData] = useState([]);\r\n\r\n    // Data Management for itemList\r\n    // Get All Data\r\n    async function fetchData() {\r\n        const result = await axios(`/api/getall`).catch(error => {\r\n            console.log(error)\r\n        });\r\n        setData(result.data);\r\n        setLoaded(true)\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    //  Insert Data\r\n    async function insertData(newEntry) {\r\n        axios.post(`/api/insert`, newEntry)\r\n            .then(res => {\r\n                newEntry['_id'] = res.data\r\n                // Redundant step but here due to slow mongoDB Cluster\r\n                let newData = JSON.parse(JSON.stringify(data))\r\n                newData.push(newEntry)\r\n                setData(newData)\r\n                // Real fetch and refresh from DB Cluster\r\n                fetchData()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    //  Edit Data\r\n    async function editData(entry) {\r\n        // Redundant step but here due to slow mongoDB Cluster\r\n        let newData = JSON.parse(JSON.stringify(data))\r\n        let dataIndex = newData.findIndex((item => item._id === entry._id));\r\n        newData[dataIndex] = entry\r\n        setData(newData)\r\n        // Real fetch and refresh from DB Cluster\r\n        axios.put(`/api/update`, entry)\r\n            .then(res => {\r\n                fetchData()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    //  Delete Data\r\n    async function deleteData(deletedId) {\r\n        // Redundant step but here due to slow mongoDB Cluster\r\n        let newData = JSON.parse(JSON.stringify(data))\r\n        newData = newData.filter(function (item) {\r\n            return item._id !== deletedId;\r\n        });\r\n        setData(newData)\r\n        // Real delete and refresh from DB Cluster\r\n        axios.delete(`/api/delete`, { data: { _id: deletedId } })\r\n            .then(res => fetchData())\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    // Elements\r\n    return <div style={{ height: '100vh', width: '100vw' }} >\r\n        {loaded ? <div style={{width:'95%'}} className=\"h-100 d-flex align-items-start flex-column mx-auto\" >\r\n            <Row className='py-1 w-100'>\r\n                {/* Create New Item */}\r\n                <Col xs={4} className='mt-auto'><InsertItem insertData={insertData} /></Col>\r\n                {/* Logo*/}\r\n                <Col xs={4} align='center'><img alt=\"\" src={customLogo} width=\"200\" height=\"100\" /></Col>\r\n            </Row>\r\n            <div style={{ height: '100%', overflowY: 'auto' }}>\r\n                {/* Table List View*/}\r\n                <TableView deleteData={deleteData} editData={editData} data={data} />\r\n            </div>\r\n        </div>\r\n\r\n            /*Show Page Loading*/\r\n            : <div className='h-100 w-100 d-flex'>\r\n                <Spinner className='mx-auto my-auto' animation='border' variant='success' />\r\n            </div>\r\n        }\r\n        {/* Link to user View */}\r\n        <Link to=\"/\"><Button style={{ position: 'absolute', top: '10px', right: '10px' }} variant='outline-success'> Go To User View</Button></Link>\r\n    </div >\r\n\r\n};\r\n","import './App.css';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport UserMain from './components/User/Main'\nimport AdminMain from './components/Admin/Main';\n\nexport default function App() {\n  return (\n    <Router>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/admin\">\n            <AdminMain />\n          </Route>\n          <Route exact path=\"/\">\n            <UserMain />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}