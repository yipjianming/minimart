{"version":3,"sources":["customLogo.png","components/User/Cart.js","components/User/NavigationBar.js","components/User/ItemList.js","components/User/Main.js","components/Admin/EditItem.js","components/Admin/TableView.js","placeholder.jpg","components/Admin/InsertItem.js","components/Admin/Main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","customHoverFocus","backgroundColor","color","borderColor","border","Cart","props","classes","numItems","Object","values","cart","reduce","acc","val","total","OverlayTrigger","trigger","placement","rootClose","overlay","Popover","style","maxWidth","width","height","className","Title","as","Content","overflowY","Container","entries","map","itemId","quantity","item","data","find","obj","_id","price","Row","Col","xs","alt","maxHeight","src","image","name","IconButton","onClick","removeFromCart","fontSize","textAlign","addToCart","toFixed","float","Button","variant","disabled","position","right","top","keys","length","NavigationBar","Navbar","Form","InputGroup","Prepend","Text","id","FormControl","value","category","onChange","e","setCategory","target","type","placeholder","search","setSearch","align","Brand","customLogo","paddingRight","ItemList","loaded","filter","toLowerCase","includes","md","lg","Card","Img","Body","hasOwnProperty","textTransform","endIcon","Spinner","animation","Main","useState","setCart","setData","setLoaded","newCart","JSON","parse","stringify","undefined","useEffect","a","axios","result","fetchData","to","EditItem","show","setShow","itemImage","setItemImage","itemName","setItemName","itemPrice","setItemPrice","itemCategory","setItemCategory","handleClose","Modal","size","onHide","onSubmit","preventDefault","newEntry","parseFloat","editData","handleSubmit","Header","accept","file","files","reader","FileReader","onload","img","document","createElement","canvas","ctx","getContext","newWidth","Math","min","drawImage","dataurl","toDataURL","readAsDataURL","required","decimalsLimit","prefix","onValueChange","Footer","TableView","columns","dataField","text","formatter","cell","row","headerStyle","verticalAlign","headerClasses","sort","textFilter","headerFormatter","column","colIndex","sortElement","filterElement","selectFilter","options","isDummyField","deleteData","bootstrap4","keyField","filterFactory","InsertItem","placeholderImage","resetState","insertData","catch","error","console","log","post","then","res","newData","push","entry","dataIndex","findIndex","put","deletedId","delete","overflowX","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qTAAe,MAA0B,uC,iHCSnCA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,iBAAkB,CACd,8BAA+B,CAC3BC,gBAAiB,UACjBC,MAAO,SAEXD,gBAAiB,aACjBE,YAAa,UACbC,OAAQ,YACRF,MAAO,aAKA,SAASG,EAAKC,GACzB,IAAMC,EAAUV,IAGZW,EAAWC,OAAOC,OAAOJ,EAAMK,MAAMC,QAAO,SAAUC,EAAKC,GAAO,OAAOD,EAAMC,IAAQ,GACvFC,EAAQ,EACZ,OAAO,cAACC,EAAA,EAAD,CACHC,QAAQ,QACRC,UAAU,SACVC,WAAW,EACXC,QACI,eAACC,EAAA,EAAD,CAASC,MAAO,CAAEC,SAAU,OAAQC,MAAO,QAASC,OAAQ,QAAUC,UAAU,uCAAhF,UACI,eAACL,EAAA,EAAQM,MAAT,CAAeC,GAAG,KAAlB,UAAwBpB,EAAxB,oBACA,cAACa,EAAA,EAAQQ,QAAT,CAAiBP,MAAO,CAAEG,OAAQ,MAAOD,MAAO,OAAQM,UAAW,QAAnE,SACI,eAACC,EAAA,EAAD,CAAWT,MAAO,CAAEE,MAAO,OAA3B,UACKf,OAAOuB,QAAQ1B,EAAMK,MAAMsB,KAAI,YAAyB,IAAD,mBAAtBC,EAAsB,KAAdC,EAAc,KAChDC,EAAO9B,EAAM+B,KAAKC,MAAK,SAAAC,GACvB,OAAOA,EAAIC,MAAQN,KAGvB,OADAnB,GAAUqB,EAAKK,MAAQN,EAChB,eAACO,EAAA,EAAD,CAAKhB,UAAU,cAAf,UACH,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,qBAAKC,IAAI,OAAOvB,MAAO,CAAEwB,UAAW,OAAQvB,SAAS,QAAUwB,IAAKX,EAAKY,MACjFtB,UAAU,cACd,cAACiB,EAAA,EAAD,UAAMP,EAAKa,OACX,cAACN,EAAA,EAAD,UAEI,sBAAKjB,UAAU,8CAA8CJ,MAAO,CAAEE,MAAO,OAA7E,UACI,cAAC0B,EAAA,EAAD,CAAYxB,UAAWnB,EAAQP,iBAC3BmD,QAAS,kBAAM7C,EAAM8C,eAAehB,EAAKI,MAD7C,SAEI,cAAC,IAAD,CAAYlB,MAAO,CAAE+B,SAAU,WAEnC,sBAAM3B,UAAU,UAAUJ,MAAO,CAAEgC,UAAW,SAAU9B,MAAO,QAA/D,SACI,wBAAQE,UAAU,OAAlB,SAA0BpB,EAAMK,KAAKyB,EAAKI,SAC9C,cAACU,EAAA,EAAD,CAAYxB,UAAWnB,EAAQP,iBAC3BmD,QAAS,kBAAM7C,EAAMiD,UAAUnB,EAAKI,MADxC,SAEI,cAAC,IAAD,CAASlB,MAAO,CAAE+B,SAAU,gBAKxC,eAACV,EAAA,EAAD,iBAASR,EAAWC,EAAKK,OAAOe,QAAQ,YAGhD,uBAAMlC,MAAO,CAAEmC,MAAO,SAAtB,mBAAwC1C,EAAMyC,QAAQ,WAI9D,cAACE,EAAA,EAAD,CAAQhC,UAAU,sBAAsBiC,QAAQ,UAAUC,UAAQ,EAAlE,yBAzCL,SA8CH,eAACV,EAAA,EAAD,CAAY5B,MAAO,CAAEpB,MAAO,WAA5B,UACI,cAAC,IAAD,CAA0BmD,SAAS,UACnC,sBAAM/B,MAAO,CAAEuC,SAAU,WAAYC,MAAO,EAAGC,IAAK,EAAG7D,MAAO,UAAWmD,SAAU,UAAnF,SACK5C,OAAOuD,KAAK1D,EAAMK,MAAMsD,OAAS,EAE9BzD,EACE,UC3EP,SAAS0D,EAAc5D,GAClC,OAAO,eAAC6D,EAAA,EAAD,CAAQzC,UAAU,mBAAmBJ,MAAO,CAAEE,MAAO,OAArD,UAEH,cAACmB,EAAA,EAAD,CAAKC,GAAI,EAAGlB,UAAU,cAAtB,SAAoC,cAAC0C,EAAA,EAAD,CAAM1C,UAAU,SAAhB,SAChC,eAAC2C,EAAA,EAAD,CAAY3C,UAAU,OAAtB,UACI,cAAC2C,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,eAApB,wBAEJ,eAACC,EAAA,EAAD,CAAa7C,GAAG,SAASN,MAAO,CAAEE,MAAO,SAAWE,UAAU,cAAcgD,MAAOpE,EAAMqE,SACrFC,SAAU,SAACC,GAAD,OAAOvE,EAAMwE,YAAYD,EAAEE,OAAOL,QADhD,UAEI,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,uBAEJ,cAACD,EAAA,EAAD,CACIO,KAAK,SACLC,YAAY,SACZ,aAAW,SACX3D,MAAO,CAAEE,MAAO,SAChBkD,MAAOpE,EAAM4E,OACbN,SAAU,SAACC,GAAD,OAAOvE,EAAM6E,UAAUN,EAAEE,OAAOL,iBAItD,cAAC/B,EAAA,EAAD,CAAKC,GAAI,EAAGwC,MAAM,SAAlB,SAA4B,eAACjB,EAAA,EAAOkB,MAAR,WAExB,qBAAK3D,UAAU,oBACXmB,IAAI,GACJE,IAAKuC,EACL9D,MAAM,MACNC,OAAO,QACR,SAGP,cAACkB,EAAA,EAAD,CAAKC,GAAI,EAAGlB,UAAU,UAAU0D,MAAM,QAAQ9D,MAAO,CAAEiE,aAAc,QAArE,SACI,cAAClF,EAAD,CAAMgC,KAAM/B,EAAM+B,KAAM1B,KAAML,EAAMK,KAAM4C,UAAWjD,EAAMiD,UAAWH,eAAgB9C,EAAM8C,sB,iDCnClGvD,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,iBAAkB,CACd,8BAA+B,CAC3BC,gBAAiB,UACjBC,MAAO,SAEXD,gBAAiB,aACjBE,YAAa,UACbC,OAAQ,YACRF,MAAO,aAIA,SAASsF,EAASlF,GAC7B,IAAMC,EAAUV,IAGhB,OAAO,cAACkC,EAAA,EAAD,CAAWT,MAAO,CAAEC,SAAU,MAAOE,OAAQ,OAAQK,UAAW,QAAhE,SACFxB,EAAMmF,OAEH,cAAC/C,EAAA,EAAD,UAEKpC,EAAM+B,KAAKqD,QAAO,SAAUtD,GAAQ,OAAQA,EAAKuC,WAAarE,EAAMqE,UAAY,QAAUrE,EAAMqE,YAC5Fe,QAAO,SAAUtD,GAAQ,OAAQA,EAAKa,KAAK0C,cAAcC,SAAStF,EAAM4E,OAAOS,kBAC/E1D,KAAI,SAAAG,GACD,OAAO,cAACO,EAAA,EAAD,CAAKC,GAAI,EAAGiD,GAAI,EAAGC,GAAI,EAAGpE,UAAU,aAAaJ,MAAO,CAAEG,OAAQ,SAAlE,SACH,eAACsE,EAAA,EAAD,CAAMrE,UAAU,cAAhB,UAEI,cAACqE,EAAA,EAAKC,IAAN,CAAU1E,MAAO,CAAEG,OAAQ,QAASD,MAAO,QAAUE,UAAU,eAAeiC,QAAQ,MAAMZ,IAAKX,EAAKY,QAEtG,eAAC+C,EAAA,EAAKE,KAAN,CAAWvE,UAAU,4CAArB,UACI,oBAAIA,UAAU,uBAAd,SAAsCU,EAAKa,OAC3C,qCAAQb,EAAKK,MAAMe,QAAQ,SAG/B,qBAAK9B,UAAU,8CAA8CJ,MAAO,CAAEE,MAAO,OAA7E,SACKlB,EAAMK,KAAKuF,eAAe9D,EAAKI,KAC5B,qCACI,cAACU,EAAA,EAAD,CAAYxB,UAAWnB,EAAQP,iBAC3BmD,QAAS,kBAAM7C,EAAM8C,eAAehB,EAAKI,MAD7C,SAEI,cAAC,IAAD,CAAYlB,MAAO,CAAC+B,SAAS,YAEjC,sBAAM3B,UAAU,UAAUJ,MAAO,CAAEgC,UAAW,SAAU9B,MAAO,QAA/D,SACI,iCAASlB,EAAMK,KAAKyB,EAAKI,SAC7B,cAACU,EAAA,EAAD,CAAYxB,UAAWnB,EAAQP,iBAC3BmD,QAAS,kBAAM7C,EAAMiD,UAAUnB,EAAKI,MADxC,SAEI,cAAC,IAAD,CAASlB,MAAO,CAAC+B,SAAS,eAGhC,cAAC,IAAD,CAAQ/B,MAAO,CAAEE,MAAO,OAAQ2E,cAAe,QAC7CzE,UAAS,4BAAuBnB,EAAQP,kBACxCoG,QAAS,cAAC,IAAD,IACTjD,QAAS,kBAAM7C,EAAMiD,UAAUnB,EAAKI,MAHtC,SAKE,sBAAMd,UAAU,oBAAhB,uCAQ9B,qBAAKA,UAAU,qBAAf,SACE,cAAC2E,EAAA,EAAD,CAAS3E,UAAU,kBAAkB4E,UAAU,SAAS3C,QAAQ,gB,qBCjEjE,SAAS4C,IAEpB,MAAgCC,mBAAS,OAAzC,mBAAO7B,EAAP,KAAiBG,EAAjB,KACA,EAA4B0B,mBAAS,IAArC,mBAAOtB,EAAP,KAAeC,EAAf,KACA,EAAwBqB,mBAAS,IAAjC,mBAAO7F,EAAP,KAAa8F,EAAb,KACA,EAAwBD,mBAAS,IAAjC,mBAAOnE,EAAP,KAAaqE,EAAb,KACA,EAA4BF,oBAAS,GAArC,mBAAOf,EAAP,KAAekB,EAAf,KAcA,SAASpD,EAAUrB,GACf,IAAI0E,EAAUC,KAAKC,MAAMD,KAAKE,UAAUpG,SAChBqG,IAApBJ,EAAQ1E,GACR0E,EAAQ1E,GAAU,EAElB0E,EAAQ1E,IAAW,EAEvBuE,EAAQG,GAGZ,SAASxD,EAAelB,GACpB,IAAI0E,EAAUC,KAAKC,MAAMD,KAAKE,UAAUpG,IACpCiG,EAAQV,eAAehE,KACvB0E,EAAQ1E,IAAW,EACf0E,EAAQ1E,IAAW,UACZ0E,EAAQ1E,IAGvBuE,EAAQG,GAKZ,OAlCAK,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACyBC,IAAM,eAD/B,OACUC,EADV,OAEIV,EAAQU,EAAO/E,MACfsE,GAAU,GAHd,4CADY,uBAAC,WAAD,wBAMZU,KACD,IA2BI,sBAAK/F,MAAO,CAAEG,OAAQ,QAASD,MAAO,SAAWE,UAAU,uCAA3D,UAEH,cAACwC,EAAD,CAAeY,YAAaA,EAAaH,SAAUA,EAAUQ,UAAWA,EAAWD,OAAQA,EAAQ7C,KAAMA,EAAM1B,KAAMA,EACjH4C,UAAWA,EAAWH,eAAgBA,IAC1C,cAACoC,EAAD,CAAUC,OAAQA,EAAQpD,KAAMA,EAAMsC,SAAUA,EAAUO,OAAQA,EAAQvE,KAAMA,EAAM4C,UAAWA,EAAWH,eAAgBA,IAC5H,cAAC,IAAD,CAAMkE,GAAG,SAAT,SACI,cAAC5D,EAAA,EAAD,CAAQpC,MAAO,CAAEuC,SAAU,WAAYE,IAAK,OAAQD,MAAO,QACvDH,QAAQ,kBADZ,oC,gECnDG,SAAS4D,EAASjH,GAE7B,MAAwBkG,oBAAS,GAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KACA,EAAkCjB,qBAAlC,mBAAOkB,EAAP,KAAkBC,EAAlB,KACA,EAAgCnB,qBAAhC,mBAAOoB,EAAP,KAAiBC,EAAjB,KACA,EAAkCrB,qBAAlC,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAAwCvB,qBAAxC,mBAAOwB,EAAP,KAAqBC,EAArB,KAWMC,EAAc,WAChBT,GAAQ,IAkBZ,OACI,qCACI,cAAC/D,EAAA,EAAD,CAAQP,QA7BG,WACfsE,GAAQ,GACRE,EAAarH,EAAM+B,KAAKW,OACxB6E,EAAYvH,EAAM+B,KAAKY,MACvB8E,EAAazH,EAAM+B,KAAKI,OACxBwF,EAAgB3H,EAAM+B,KAAKsC,WAwBMjD,UAAU,sBAAsBJ,MAAO,CAAEnB,YAAa,QAAUwD,QAAQ,eAArG,SAAoH,cAAC,IAAD,MAEpH,cAACwE,EAAA,EAAD,CAAOC,KAAK,KACRZ,KAAMA,EAAMa,OAAQH,EAAa5B,WAAW,EADhD,SAEI,eAAClC,EAAA,EAAD,CAAMkE,SAAU,SAACzD,GAAD,OApB5B,SAAsBA,GAClBA,EAAE0D,iBACFd,GAAQ,GACR,IAAIe,EAAW,CACXhG,IAAKlC,EAAM+B,KAAKG,IAChBS,KAAM2E,EACNjD,SAAUqD,EACVhF,MAAO0E,EACPjF,MAAOgG,WAAWX,IAEtBxH,EAAMoI,SAASF,GAUgBG,CAAa9D,IAApC,UAEI,cAACsD,EAAA,EAAMS,OAAP,UACI,cAACT,EAAA,EAAMxG,MAAP,0BAEJ,eAACwG,EAAA,EAAMlC,KAAP,WAEI,cAACF,EAAA,EAAKC,IAAN,CAAU1E,MAAO,CAAEG,OAAQ,QAASD,MAAO,QAAUE,UAAU,UAAUiC,QAAQ,MAAMZ,IAAK2E,IAE5F,cAACrD,EAAA,EAAD,CAAY3C,UAAU,OAAtB,SACI,uBAAOsD,KAAK,OAAO6D,OAAO,UAAUjE,SAAU,SAACC,GAC3C,IAAOiE,EAAP,YAAejE,EAAEE,OAAOgE,MAAxB,MACA,GAAID,EAAM,CACN,IAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACrE,GACb,IAAIsE,EAAMC,SAASC,cAAc,OACjCF,EAAID,OAAS,WAET,IAAII,EAASF,SAASC,cAAc,UAChCE,EAAMD,EAAOE,WAAW,MAGxBhI,EAAQ2H,EAAI3H,MACZC,EAAS0H,EAAI1H,OACbgI,EAAWC,KAAKC,IAAKnI,EAAQC,EAHjB,IADA,KAKhB6H,EAAO9H,MAAQiI,EACfH,EAAO7H,OALS,IAMhB8H,EAAIK,UAAUT,EAAK,EAAG,EAAGM,EANT,KAOhB,IAAII,EAAUP,EAAOQ,UAAU,aAC/BnC,EAAakC,IAEjBV,EAAIpG,IAAM8B,EAAEE,OAAOqC,QAEvB4B,EAAOe,cAAcjB,KAG3BkB,UAAQ,MAGd,eAAC3F,EAAA,EAAD,CAAY3C,UAAU,OAAtB,UACI,cAAC2C,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,eAApB,yBAEJ,cAACC,EAAA,EAAD,CAAaC,MAAOkD,EAAUhD,SAAU,SAACC,GAAD,OAAOgD,EAAYhD,EAAEE,OAAOL,QAAQsF,UAAQ,OAGxF,eAAC3F,EAAA,EAAD,CAAY3C,UAAU,OAAtB,UACI,cAAC2C,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,eAApB,6BAEJ,eAACC,EAAA,EAAD,CAAa7C,GAAG,SAASF,UAAU,cAAckD,SAAU,SAACC,GAAD,OAAOoD,EAAgBpD,EAAEE,OAAOL,QAAQA,MAAOsD,EAA1G,UACI,wBAAQtD,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,0BAKR,cAACL,EAAA,EAAD,CAAY3C,UAAU,OAAtB,SACI,cAAC,IAAD,CACIA,UAAU,QACVuD,YAAY,KACZgF,cAAe,EACfC,OAAO,KACPxF,MAAOoD,EACPqC,cAAe,SAACzF,GACZqD,EAAarD,IACdsF,UAAQ,SAIvB,eAAC7B,EAAA,EAAMiC,OAAP,WACI,cAAC1G,EAAA,EAAD,CAAQC,QAAQ,YAAYR,QAAS+E,EAArC,mBAGA,cAACxE,EAAA,EAAD,CAAQC,QAAQ,UAAUqB,KAAK,SAA/B,oCCpHT,SAASqF,GAAU/J,GAC9B,IAAMgK,EAAU,CAEZ,CACIC,UAAW,QACXC,KAAM,OACNC,UAAW,SAACC,EAAMC,GACd,OAAO,qBAAKjJ,UAAU,gBAAf,SACH,qBAAKmB,IAAI,OAAOvB,MAAO,CAAEG,OAAQ,OAAQD,MAAO,QAAUuB,IAAK2H,EAAMhJ,UAAU,eAGvFJ,MAAO,CAAEgC,UAAW,UACpBsH,YAAa,CAAEpJ,MAAO,OAAQ8B,UAAW,SAAUuH,cAAe,WAGtE,CACIN,UAAW,MACXC,KAAM,KACNlJ,MAAO,CAAEgC,UAAW,UAEpB/C,QAAS,oCACTuK,cAAe,oCACfF,YAAa,CAAEpJ,MAAO,OAAO8B,UAAW,SAAUuH,cAAe,WAIrE,CACIN,UAAW,OACXC,KAAM,OACNI,YAAa,CAAEC,cAAe,UAC9BE,MAAM,EACNrF,OAAQsF,wBAGZ,CACIT,UAAW,QACXC,KAAM,QACNlJ,MAAO,CAAEgC,UAAW,UAEpBsH,YAAa,CAAEpJ,MAAO,QAAS8B,UAAW,SAAUuH,cAAe,UACnEJ,UAAW,SAACC,EAAMC,GACd,OAAO,+BAAOD,EAAKlH,QAAQ,MAE/ByH,gBAAiB,SAACC,EAAQC,EAAT,GAAuD,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAC/C,OACI,sBAAK3J,UAAU,QAAf,UACI,uBAAMA,UAAU,UAAhB,UACKwJ,EAAOV,KADZ,IACmBY,KAElBC,MAIbN,MAAM,GAGV,CACIR,UAAW,WACXC,KAAM,WACNlJ,MAAO,CAAEgC,UAAW,UACpBsH,YAAa,CAAEtH,UAAW,SAAUuH,cAAe,UACnDnF,OAAQ4F,uBAAa,CACjBC,QAAS,CACL,OAAU,SACV,KAAQ,OACR,OAAU,SACV,OAAU,SACV,OAAU,aAKtB,CACIhB,UAAW,QACXiB,cAAc,EACdhB,KAAM,SACNlJ,MAAO,CAAEgC,UAAW,UACpBsH,YAAa,CAAEpJ,MAAO,QAAS8B,UAAW,SAAUuH,cAAe,UACnEJ,UAAW,SAACC,EAAMC,GACd,OAAO,qCAAE,cAACpD,EAAD,CAAUlF,KAAMsI,EAAKjC,SAAUpI,EAAMoI,WAC1C,cAAChF,EAAA,EAAD,CAAQhC,UAAU,sBAAsBiC,QAAQ,eAC5CrC,MAAO,CAAEnB,YAAa,QACtBgD,QAAS,kBAAM7C,EAAMmL,WAAWd,EAAInI,MAFxC,SAGC,cAAC,IAAD,YAGjB,OAAO,cAAC,IAAD,CAAgBkJ,YAAU,EAACC,SAAS,MAAMtJ,KAAM/B,EAAM+B,KAAMiI,QAASA,EAAS5E,OAAQkG,QC9FlF,WAA0B,wCCK1B,SAASC,GAAWvL,GAE/B,MAAwBkG,oBAAS,GAAjC,mBAAOgB,EAAP,KAAaC,EAAb,KACA,EAAkCjB,mBAASsF,IAA3C,mBAAOpE,EAAP,KAAkBC,EAAlB,KACA,EAAgCnB,mBAAS,aAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KACA,EAAkCrB,mBAAS,IAA3C,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAAwCvB,mBAAS,UAAjD,mBAAOwB,EAAP,KAAqBC,EAArB,KAGA,SAAS8D,IACLtE,GAAQ,GACRE,EAAamE,IACbjE,EAAY,aACZE,EAAa,IACbE,EAAgB,UAEpB,IACMC,EAAc,WAChB6D,KAgBJ,OACI,qCAEI,cAACrI,EAAA,EAAD,CAAQhC,UAAU,OAAOiC,QAAQ,UAAUR,QArBhC,kBAAMsE,GAAQ,IAqBzB,0BAIA,cAACU,EAAA,EAAD,CAAOC,KAAK,KACRZ,KAAMA,EAAMa,OAAQH,EAAa5B,WAAW,EADhD,SAEI,eAAClC,EAAA,EAAD,CAAMkE,SAAU,SAACzD,GAAD,OAtB5B,SAAsBA,GAClBA,EAAE0D,iBACFd,GAAQ,GACR,IAAIe,EAAW,CACXvF,KAAM2E,EACNjD,SAAUqD,EACVhF,MAAO0E,EACPjF,MAAOgG,WAAWX,IAEtBiE,IACAzL,EAAM0L,WAAWxD,GAYcG,CAAa9D,IAApC,UACI,cAACsD,EAAA,EAAMS,OAAP,UACI,cAACT,EAAA,EAAMxG,MAAP,6BAEJ,eAACwG,EAAA,EAAMlC,KAAP,WAEI,cAACF,EAAA,EAAKC,IAAN,CAAU1E,MAAO,CAAEG,OAAQ,QAASD,MAAO,QAAUE,UAAU,UAAUiC,QAAQ,MAAMZ,IAAK2E,IAE5F,cAACrD,EAAA,EAAD,CAAY3C,UAAU,OAAtB,SACI,uBAAOsD,KAAK,OAAO6D,OAAO,UAAUjE,SAAU,SAACC,GAC3C,IAAOiE,EAAP,YAAejE,EAAEE,OAAOgE,MAAxB,MACA,GAAID,EAAM,CACN,IAAME,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACrE,GACb,IAAIsE,EAAMC,SAASC,cAAc,OACjCF,EAAID,OAAS,WAET,IAAII,EAASF,SAASC,cAAc,UAChCE,EAAMD,EAAOE,WAAW,MAGxBhI,EAAQ2H,EAAI3H,MACZC,EAAS0H,EAAI1H,OACbgI,EAAWC,KAAKC,IAAKnI,EAAQC,EAHjB,IADA,KAKhB6H,EAAO9H,MAAQiI,EACfH,EAAO7H,OALS,IAMhB8H,EAAIK,UAAUT,EAAK,EAAG,EAAGM,EANT,KAOhB,IAAII,EAAUP,EAAOQ,UAAU,aAC/BnC,EAAakC,IAEjBV,EAAIpG,IAAM8B,EAAEE,OAAOqC,QAEvB4B,EAAOe,cAAcjB,KAG3BkB,UAAQ,MAGd,eAAC3F,EAAA,EAAD,CAAY3C,UAAU,OAAtB,UACI,cAAC2C,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,eAApB,yBAEJ,cAACC,EAAA,EAAD,CAAaG,SAAU,SAACC,GAAD,OAAOgD,EAAYhD,EAAEE,OAAOL,QAAQsF,UAAQ,OAGvE,eAAC3F,EAAA,EAAD,CAAY3C,UAAU,OAAtB,UACI,cAAC2C,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,eAApB,6BAEJ,eAACC,EAAA,EAAD,CAAa7C,GAAG,SAASF,UAAU,cAC/BkD,SAAU,SAACC,GAAD,OAAOoD,EAAgBpD,EAAEE,OAAOL,QAAQA,MAAOsD,EAD7D,UAEI,wBAAQtD,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,0BAKR,cAACL,EAAA,EAAD,CAAY3C,UAAU,OAAtB,SACI,cAAC,IAAD,CACIA,UAAU,QACVuD,YAAY,KACZgF,cAAe,EACfC,OAAO,KACPC,cAAe,SAACzF,GACZqD,EAAarD,IACdsF,UAAQ,SAIvB,eAAC7B,EAAA,EAAMiC,OAAP,WACI,cAAC1G,EAAA,EAAD,CAAQC,QAAQ,YAAYR,QAAS+E,EAArC,mBAGA,cAACxE,EAAA,EAAD,CAAQC,QAAQ,UAAUqB,KAAK,SAA/B,iCCrHT,SAASuB,KAEpB,MAA4BC,oBAAS,GAArC,mBAAOf,EAAP,KAAekB,EAAf,KACA,EAAwBH,mBAAS,IAAjC,mBAAOnE,EAAP,KAAaqE,EAAb,KAH2B,SAOZW,IAPY,2EAO3B,4BAAAH,EAAA,sEACyBC,IAAM,eAAe8E,OAAM,SAAAC,GAC5CC,QAAQC,IAAIF,MAFpB,OACU9E,EADV,OAIIV,EAAQU,EAAO/E,MACfsE,GAAU,GALd,4CAP2B,kEAmB3B,WAA0B6B,GAA1B,SAAAtB,EAAA,sDACIC,IAAMkF,KAAN,cAA0B7D,GACrB8D,MAAK,SAAAC,GACF/D,EAAQ,IAAU+D,EAAIlK,KAEtB,IAAImK,EAAU3F,KAAKC,MAAMD,KAAKE,UAAU1E,IACxCmK,EAAQC,KAAKjE,GACb9B,EAAQ8F,GAERnF,OAEH4E,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAZxB,4CAnB2B,kEAmC3B,WAAwBQ,GAAxB,iBAAAxF,EAAA,sDAEQsF,EAAU3F,KAAKC,MAAMD,KAAKE,UAAU1E,IACpCsK,EAAYH,EAAQI,WAAW,SAAAxK,GAAI,OAAIA,EAAKI,MAAQkK,EAAMlK,OAC9DgK,EAAQG,GAAaD,EACrBhG,EAAQ8F,GAERrF,IAAM0F,IAAN,cAAyBH,GACpBJ,MAAK,SAAAC,GACFlF,OAEH4E,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAZxB,4CAnC2B,kEAoD3B,WAA0BY,GAA1B,eAAA5F,EAAA,sDAGIsF,GADIA,EAAU3F,KAAKC,MAAMD,KAAKE,UAAU1E,KACtBqD,QAAO,SAAUtD,GAC/B,OAAOA,EAAKI,MAAQsK,KAExBpG,EAAQ8F,GAERrF,IAAM4F,OAAN,cAA4B,CAAE1K,KAAM,CAAEG,IAAKsK,KACtCR,MAAK,SAAAC,GAAG,OAAIlF,OACZ4E,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAXxB,4CApD2B,sBAmE3B,OArDAjF,qBAAU,WACNI,MACD,IAmDI,sBAAK/F,MAAO,CAAEG,OAAQ,QAASD,MAAO,SAAtC,UACFiE,EAAS,sBAAKnE,MAAO,CAACE,MAAM,OAAQE,UAAU,qDAArC,UACN,eAACgB,EAAA,EAAD,CAAKhB,UAAU,aAAf,UAEI,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAGlB,UAAU,UAAtB,SAAgC,cAACmK,GAAD,CAAYG,WAvE7B,gDAyEf,cAACrJ,EAAA,EAAD,CAAKC,GAAI,EAAGwC,MAAM,SAAlB,SAA2B,qBAAK1D,UAAU,oBAAoBmB,IAAI,GAAGE,IAAKuC,EAAY9D,MAAM,MAAMC,OAAO,aAE7G,qBAAKH,MAAO,CAAEG,OAAQ,OAAQD,MAAM,OAAQwL,UAAU,OAAQlL,UAAW,QAAzE,SAEI,cAACuI,GAAD,CAAWoB,WA7EI,4CA6EoB/C,SA7EpB,4CA6EwCrG,KAAMA,SAK/D,qBAAKX,UAAU,qBAAf,SACE,cAAC2E,EAAA,EAAD,CAAS3E,UAAU,kBAAkB4E,UAAU,SAAS3C,QAAQ,cAIxE,cAAC,IAAD,CAAM2D,GAAG,IAAT,SAAa,cAAC5D,EAAA,EAAD,CAAQpC,MAAO,CAAEuC,SAAU,WAAYE,IAAK,OAAQD,MAAO,QAAUH,QAAQ,kBAA7E,mCCzFN,SAASsJ,KACtB,OACE,cAAC,IAAD,UAGI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,WCfZ,IAYeC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,cCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF1E,SAAS2E,eAAe,SAM1BX,O","file":"static/js/main.5323d80d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/customLogo.3b2eb80b.png\";","\r\nimport { OverlayTrigger, Popover, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\n// Item Quantity Button Styles\r\nconst useStyles = makeStyles(theme => ({\r\n    customHoverFocus: {\r\n        \"&:hover, &.Mui-focusVisible\": {\r\n            backgroundColor: '#65b32E',\r\n            color: 'white'\r\n        },\r\n        backgroundColor: 'whitesmoke',\r\n        borderColor: '#89B765',\r\n        border: '1px solid',\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\n\r\nexport default function Cart(props) {\r\n    const classes = useStyles();\r\n\r\n    /* POPUP SHOPPING CART */\r\n    let numItems = Object.values(props.cart).reduce(function (acc, val) { return acc + val; }, 0)\r\n    let total = 0\r\n    return <OverlayTrigger\r\n        trigger=\"click\"\r\n        placement='bottom'\r\n        rootClose={true}\r\n        overlay={\r\n            <Popover style={{ maxWidth: '100%', width: '400px', height: '70vh' }} className='d-flex align-items-start flex-column'>\r\n                <Popover.Title as=\"h3\">{numItems} ITEMS IN CART</Popover.Title>\r\n                <Popover.Content style={{ height: '90%', width: '100%', overflowY: 'auto' }}>\r\n                    <Container style={{ width: '95%' }}>\r\n                        {Object.entries(props.cart).map(([itemId, quantity]) => {\r\n                            let item = props.data.find(obj => {\r\n                                return obj._id === itemId\r\n                            })\r\n                            total += (item.price * quantity)\r\n                            return <Row className='py-2 border'>\r\n                                <Col xs={2}><img alt='item' style={{ maxHeight: '40px', maxWidth:'40px' }} src={item.image}\r\n                                    className=\"mx-auto\" /></Col>\r\n                                <Col>{item.name}</Col>\r\n                                <Col>\r\n                                    {/* Buttons for Quantity Management*/}\r\n                                    <div className='mx-auto mb-2 d-flex justify-content-between' style={{ width: '70%' }}>\r\n                                        <IconButton className={classes.customHoverFocus}\r\n                                            onClick={() => props.removeFromCart(item._id)} >\r\n                                            <RemoveIcon style={{ fontSize: '9px' }} />\r\n                                        </IconButton>\r\n                                        <span className='my-auto' style={{ textAlign: 'center', width: '100%' }}>\r\n                                            <strong className='px-1'>{props.cart[item._id]}</strong></span>\r\n                                        <IconButton className={classes.customHoverFocus}\r\n                                            onClick={() => props.addToCart(item._id)} >\r\n                                            <AddIcon style={{ fontSize: '9px' }} />\r\n                                        </IconButton>\r\n\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>S${(quantity * item.price).toFixed(2)}</Col>\r\n                            </Row>\r\n                        })}\r\n                        <span style={{ float: 'right' }}>Total:{total.toFixed(2)}</span>\r\n                    </Container>\r\n                </Popover.Content>\r\n\r\n                <Button className='mt-auto ml-auto m-2' variant='success' disabled>Checkout</Button>\r\n            </Popover>\r\n        }\r\n    >\r\n        {/* Cart button */}\r\n        <IconButton style={{ color: '#285E37' }}>\r\n            <ShoppingCartOutlinedIcon fontSize=\"large\" />\r\n            <span style={{ position: \"absolute\", right: 3, top: 3, color: '#C70039', fontSize: '1.2rem' }}>\r\n                {Object.keys(props.cart).length > 0 ?\r\n                    // get sum of all item quantity in cart event if they are different item types\r\n                    numItems\r\n                    : ''}\r\n            </span>\r\n        </IconButton>\r\n    </OverlayTrigger>\r\n\r\n\r\n\r\n\r\n\r\n};\r\n","\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Form, FormControl, InputGroup, Col } from 'react-bootstrap';\r\n\r\nimport customLogo from '../../customLogo.png'\r\nimport Cart from './Cart';\r\nexport default function NavigationBar(props) {\r\n    return <Navbar className='mx-auto p-0 pb-1' style={{ width: '95%' }} >\r\n        {/* DROPDOWN AND SEARCH BAR */}\r\n        <Col xs={4} className='mt-auto p-0'><Form className=\"d-flex\">\r\n            <InputGroup className=\"mb-1\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon1\">Category</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl as='select' style={{ width: '100px' }} className='form-select' value={props.category}\r\n                    onChange={(e) => props.setCategory(e.target.value)}>\r\n                    <option value='All' >All Items</option>\r\n                    <option value='Drinks'>Drinks</option>\r\n                    <option value='Food'>Food</option>\r\n                    <option value='Fruits'>Fruits</option>\r\n                    <option value='Snacks'>Snacks</option>\r\n                    <option value='Others'>Others</option>\r\n                </FormControl>\r\n                <FormControl\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    style={{ width: '100px' }}\r\n                    value={props.search}\r\n                    onChange={(e) => props.setSearch(e.target.value)} />\r\n            </InputGroup>\r\n        </Form></Col>\r\n        {/* LOGO */}\r\n        <Col xs={4} align=\"center\" ><Navbar.Brand>\r\n            {/* Hidden on smaller device */}\r\n            <img className='d-none d-lg-block'\r\n                alt=\"\"\r\n                src={customLogo}\r\n                width=\"200\"\r\n                height=\"100\"\r\n            />{' '}\r\n        </Navbar.Brand></Col>\r\n        {/* CART*/}\r\n        <Col xs={4} className='mt-auto' align='right' style={{ paddingRight: '20px' }}>\r\n            <Cart data={props.data} cart={props.cart} addToCart={props.addToCart} removeFromCart={props.removeFromCart} />\r\n        </Col>\r\n    </Navbar >\r\n};\r\n","import { Container, Row, Col, Spinner, Card } from 'react-bootstrap';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Item Quantity Button Styles\r\nconst useStyles = makeStyles(theme => ({\r\n    customHoverFocus: {\r\n        \"&:hover, &.Mui-focusVisible\": {\r\n            backgroundColor: '#65b32E',\r\n            color: 'white'\r\n        },\r\n        backgroundColor: 'whitesmoke',\r\n        borderColor: '#89B765',\r\n        border: '1px solid',\r\n        color: 'black'\r\n    }\r\n}));\r\n\r\nexport default function ItemList(props) {\r\n    const classes = useStyles();    \r\n\r\n    // Elements\r\n    return <Container style={{ maxWidth: '95%', height: '100%', overflowY: 'auto' }} >\r\n        {props.loaded ?\r\n            /*Page Loaded*/\r\n            <Row>\r\n                {/* Filter first by the selected category */}\r\n                {props.data.filter(function (item) { return (item.category === props.category || 'All' === props.category) })\r\n                    .filter(function (item) { return (item.name.toLowerCase().includes(props.search.toLowerCase())) })\r\n                    .map(item => {\r\n                        return <Col xs={6} md={4} lg={2} className=\"border p-1\" style={{ height: '260px' }}>\r\n                            <Card className='w-100 h-100'>\r\n                                {/* Image for each item */}\r\n                                <Card.Img style={{ height: '100px', width: 'auto' }} className='mx-auto mt-2' variant=\"top\" src={item.image} />\r\n                                {/* Name and Price of each item */}\r\n                                <Card.Body className=\"d-flex align-items-start flex-column pb-1\">\r\n                                    <h6 className=\"mb-auto text-limit-2\">{item.name}</h6>\r\n                                    <div>S${item.price.toFixed(2)}</div>\r\n                                </Card.Body>\r\n                                {/* Buttons for Quantity Management*/}\r\n                                <div className='mx-auto mb-2 d-flex justify-content-between' style={{ width: '70%' }}>\r\n                                    {props.cart.hasOwnProperty(item._id) ?\r\n                                        <>\r\n                                            <IconButton className={classes.customHoverFocus}\r\n                                                onClick={() => props.removeFromCart(item._id)} >\r\n                                                <RemoveIcon style={{fontSize:'10px'}} />\r\n                                            </IconButton>\r\n                                            <span className='my-auto' style={{ textAlign: 'center', width: '100%' }}>\r\n                                                <strong>{props.cart[item._id]}</strong></span>\r\n                                            <IconButton className={classes.customHoverFocus}\r\n                                                onClick={() => props.addToCart(item._id)} >\r\n                                                <AddIcon style={{fontSize:'10px'}} />\r\n                                            </IconButton>\r\n                                        </>\r\n                                        : <Button style={{ width: '100%', textTransform: 'none' }}\r\n                                            className={`button-responsive ${classes.customHoverFocus}`}\r\n                                            endIcon={<AddShoppingCartIcon />}\r\n                                            onClick={() => props.addToCart(item._id)}>\r\n                                                {/* Hide words for smaller screens */}\r\n                                            <span className='d-none d-xl-block'>Add To Cart</span></Button>\r\n                                    }\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                    })}\r\n            </Row>\r\n            /*Show Page Loading*/\r\n            : <div className='h-100 w-100 d-flex'>\r\n                <Spinner className='mx-auto my-auto' animation='border' variant='success' />\r\n            </div>\r\n        }\r\n\r\n    </Container >\r\n\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport NavigationBar from './NavigationBar';\r\nimport ItemList from './ItemList';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nexport default function Main() {\r\n\r\n    const [category, setCategory] = useState('All');\r\n    const [search, setSearch] = useState('');\r\n    const [cart, setCart] = useState({});\r\n    const [data, setData] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    // Fetch API on component mount to display to the user\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const result = await axios(`/api/getall`);\r\n            setData(result.data);\r\n            setLoaded(true)\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Data Management for Cart\r\n    // Add a new item to cart\r\n    function addToCart(itemId) {\r\n        let newCart = JSON.parse(JSON.stringify(cart))\r\n        if (newCart[itemId] === undefined) {\r\n            newCart[itemId] = 1\r\n        } else {\r\n            newCart[itemId] += 1\r\n        }\r\n        setCart(newCart)\r\n    }\r\n    // Remove an item from cart\r\n    function removeFromCart(itemId) {\r\n        let newCart = JSON.parse(JSON.stringify(cart))\r\n        if (newCart.hasOwnProperty(itemId)) {\r\n            newCart[itemId] -= 1\r\n            if (newCart[itemId] <= 0) {\r\n                delete newCart[itemId];\r\n            }\r\n        }\r\n        setCart(newCart)\r\n    }\r\n\r\n\r\n    // Elements\r\n    return <div style={{ height: '100vh', width: '100vw' }} className=\"d-flex align-items-start flex-column\" >\r\n\r\n        <NavigationBar setCategory={setCategory} category={category} setSearch={setSearch} search={search} data={data} cart={cart}\r\n            addToCart={addToCart} removeFromCart={removeFromCart} />\r\n        <ItemList loaded={loaded} data={data} category={category} search={search} cart={cart} addToCart={addToCart} removeFromCart={removeFromCart} />\r\n        <Link to=\"/admin\">\r\n            <Button style={{ position: 'absolute', top: '10px', right: '10px' }}\r\n                variant='outline-success'> Go To Admin View</Button>\r\n        </Link>\r\n    </div>\r\n\r\n};\r\n","import { Button, Modal, Form, Card, InputGroup, FormControl } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport CurrencyInput from 'react-currency-input-field';\r\nimport { FaEdit } from 'react-icons/fa';\r\n\r\nexport default function EditItem(props) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [itemImage, setItemImage] = useState();\r\n    const [itemName, setItemName] = useState();\r\n    const [itemPrice, setItemPrice] = useState();\r\n    const [itemCategory, setItemCategory] = useState();\r\n\r\n    // Set Modal State to the last item clicked\r\n    const handleShow = () => {\r\n        setShow(true)\r\n        setItemImage(props.data.image)\r\n        setItemName(props.data.name)\r\n        setItemPrice(props.data.price)\r\n        setItemCategory(props.data.category)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n    };\r\n\r\n    // On submit\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setShow(false)\r\n        let newEntry = {\r\n            _id: props.data._id,\r\n            name: itemName,\r\n            category: itemCategory,\r\n            image: itemImage,\r\n            price: parseFloat(itemPrice)\r\n        }\r\n        props.editData(newEntry)\r\n    }\r\n\r\n    // Elements\r\n    return (\r\n        <>\r\n            <Button onClick={handleShow} className='px-1 pt-0 pb-1 mx-1' style={{ borderColor: 'grey' }} variant=\"outline-dark\"><FaEdit /></Button>\r\n\r\n            <Modal size=\"md\"\r\n                show={show} onHide={handleClose} animation={false}>\r\n                <Form onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                    <Modal.Header>\r\n                        <Modal.Title>Edit Item</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* Image View */}\r\n                        <Card.Img style={{ height: '100px', width: 'auto' }} className='mx-auto' variant=\"top\" src={itemImage} />\r\n                        {/* Image Upload */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <input type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                const [file] = e.target.files;\r\n                                if (file) {\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = (e) => {\r\n                                        var img = document.createElement(\"img\");\r\n                                        img.onload = () => {\r\n                                            // Resizing to save space in DB\r\n                                            var canvas = document.createElement('canvas');\r\n                                            var ctx = canvas.getContext(\"2d\");\r\n                                            var MAX_WIDTH = 125;\r\n                                            let newHeight = 100\r\n                                            var width = img.width;\r\n                                            var height = img.height;\r\n                                            let newWidth = Math.min((width / height) * newHeight, MAX_WIDTH)\r\n                                            canvas.width = newWidth;\r\n                                            canvas.height = newHeight;\r\n                                            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n                                            var dataurl = canvas.toDataURL(\"image/png\");\r\n                                            setItemImage(dataurl)\r\n                                        }\r\n                                        img.src = e.target.result;\r\n                                    }\r\n                                    reader.readAsDataURL(file)\r\n                                }\r\n                            }\r\n                            } required />\r\n                        </InputGroup>\r\n                        {/* Item Name */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\">Item Name</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={itemName} onChange={(e) => setItemName(e.target.value)} required />\r\n                        </InputGroup>\r\n                        {/* Item Category */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\">Item Category</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl as='select' className='form-select' onChange={(e) => setItemCategory(e.target.value)} value={itemCategory}>\r\n                                <option value='Drinks'>Drinks</option>\r\n                                <option value='Food'>Food</option>\r\n                                <option value='Fruits'>Fruits</option>\r\n                                <option value='Snacks'>Snacks</option>\r\n                                <option value='Others'>Others</option>\r\n\r\n                            </FormControl>\r\n                        </InputGroup>\r\n                        {/* Item Price */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <CurrencyInput\r\n                                className='w-100'\r\n                                placeholder=\"S$\"\r\n                                decimalsLimit={2}\r\n                                prefix='S$'\r\n                                value={itemPrice}\r\n                                onValueChange={(value) => {\r\n                                    setItemPrice(value)\r\n                                }} required />\r\n                        </InputGroup>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"success\" type='submit'>Update Item</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n","import { FaTrash } from 'react-icons/fa';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\r\nimport EditItem from './EditItem';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport default function TableView(props) {\r\n    const columns = [\r\n        // IMAGE COLUMN\r\n        {\r\n            dataField: 'image',\r\n            text: 'Icon',\r\n            formatter: (cell, row) => {\r\n                return <div className='w-100 mx-auto'>\r\n                    <img alt='item' style={{ height: '30px', width: 'auto' }} src={cell} className=\"mx-auto\" />\r\n                </div>;\r\n            },\r\n            style: { textAlign: 'center' },\r\n            headerStyle: { width: '70px', textAlign: 'center', verticalAlign: 'middle' }\r\n        },\r\n        // ID COLUMN\r\n        {\r\n            dataField: '_id',\r\n            text: 'ID',\r\n            style: { textAlign: 'center', },\r\n            // Only show for large devices and above\r\n            classes: 'd-none d-lg-block border-bottom-0',\r\n            headerClasses: 'd-none d-lg-block border-bottom-0',\r\n            headerStyle: { width: '100%',textAlign: 'center', verticalAlign: 'middle' },\r\n\r\n        },\r\n        // NAME COLUMN\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name',\r\n            headerStyle: { verticalAlign: 'middle' },\r\n            sort: true,\r\n            filter: textFilter()\r\n        },\r\n        // PRICE COLUMN\r\n        {\r\n            dataField: 'price',\r\n            text: 'Price',\r\n            style: { textAlign: 'center' },\r\n\r\n            headerStyle: { width: '120px', textAlign: 'center', verticalAlign: 'middle' },\r\n            formatter: (cell, row) => {\r\n                return <span>{cell.toFixed(2)}</span>\r\n            },\r\n            headerFormatter: (column, colIndex, { sortElement, filterElement }) => {\r\n                return (\r\n                    <div className='h-100'>\r\n                        <span className='mb-auto'>\r\n                            {column.text} {sortElement}\r\n                        </span>\r\n                        {filterElement}\r\n                    </div>\r\n                );\r\n            },\r\n            sort: true\r\n        },\r\n        // CATEGORY COLUMN\r\n        {\r\n            dataField: 'category',\r\n            text: 'Category',\r\n            style: { textAlign: 'center' },\r\n            headerStyle: { textAlign: 'center', verticalAlign: 'middle' },\r\n            filter: selectFilter({\r\n                options: {\r\n                    'Drinks': 'Drinks',\r\n                    'Food': 'Food',\r\n                    'Fruits': 'Fruits',\r\n                    'Snacks': 'Snacks',\r\n                    'Others': 'Others'\r\n                }\r\n            }),\r\n        },\r\n        // ACTION COLUMN\r\n        {\r\n            dataField: 'dummy',\r\n            isDummyField: true,\r\n            text: 'Action',\r\n            style: { textAlign: 'center' },\r\n            headerStyle: { width: '100px', textAlign: 'center', verticalAlign: 'middle' },\r\n            formatter: (cell, row) => {\r\n                return <><EditItem data={row} editData={props.editData} />\r\n                    <Button className='px-1 pt-0 pb-1 mx-1' variant=\"outline-dark\"\r\n                        style={{ borderColor: 'grey' }}\r\n                        onClick={() => props.deleteData(row._id)}\r\n                    ><FaTrash /></Button></>\r\n            }\r\n        }];\r\n    return <BootstrapTable bootstrap4 keyField='_id' data={props.data} columns={columns} filter={filterFactory()} />\r\n\r\n\r\n};\r\n","export default __webpack_public_path__ + \"static/media/placeholder.39a842d0.jpg\";","import { Button, Modal, Form, Card, InputGroup, FormControl } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport placeholderImage from '../../placeholder.jpg'\r\nimport CurrencyInput from 'react-currency-input-field';\r\n\r\nexport default function InsertItem(props) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [itemImage, setItemImage] = useState(placeholderImage);\r\n    const [itemName, setItemName] = useState('Item Name');\r\n    const [itemPrice, setItemPrice] = useState('');\r\n    const [itemCategory, setItemCategory] = useState('Others');\r\n\r\n    // Reset State (Clear inputs when user hides the modal)\r\n    function resetState() {\r\n        setShow(false)\r\n        setItemImage(placeholderImage)\r\n        setItemName('Item Name')\r\n        setItemPrice('')\r\n        setItemCategory('Others')\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => {\r\n        resetState()\r\n    };\r\n    // On submit\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setShow(false)\r\n        let newEntry = {\r\n            name: itemName,\r\n            category: itemCategory,\r\n            image: itemImage,\r\n            price: parseFloat(itemPrice)\r\n        }\r\n        resetState();\r\n        props.insertData(newEntry)\r\n    }\r\n    // Elements\r\n    return (\r\n        <>\r\n            {/* Button for user to open Create Item Modal */}\r\n            <Button className='my-1' variant=\"success\" onClick={handleShow}>\r\n                Add New Item\r\n            </Button>\r\n\r\n            <Modal size=\"md\"\r\n                show={show} onHide={handleClose} animation={false}>\r\n                <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Modal.Header>\r\n                        <Modal.Title>Add New Item</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {/* Image View */}\r\n                        <Card.Img style={{ height: '100px', width: 'auto' }} className='mx-auto' variant=\"top\" src={itemImage} />\r\n                        {/* Image Upload */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <input type=\"file\" accept=\"image/*\" onChange={(e) => {\r\n                                const [file] = e.target.files;\r\n                                if (file) {\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = (e) => {\r\n                                        var img = document.createElement(\"img\");\r\n                                        img.onload = () => {\r\n                                            // Resizing to save space in DB\r\n                                            var canvas = document.createElement('canvas');\r\n                                            var ctx = canvas.getContext(\"2d\");\r\n                                            var MAX_WIDTH = 125;\r\n                                            let newHeight = 100\r\n                                            var width = img.width;\r\n                                            var height = img.height;\r\n                                            let newWidth = Math.min((width / height) * newHeight, MAX_WIDTH)\r\n                                            canvas.width = newWidth;\r\n                                            canvas.height = newHeight;\r\n                                            ctx.drawImage(img, 0, 0, newWidth, newHeight);\r\n                                            var dataurl = canvas.toDataURL(\"image/png\");\r\n                                            setItemImage(dataurl)\r\n                                        }\r\n                                        img.src = e.target.result;\r\n                                    }\r\n                                    reader.readAsDataURL(file)\r\n                                }\r\n                            }\r\n                            } required />\r\n                        </InputGroup>\r\n                        {/* Item Name */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\">Item Name</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl onChange={(e) => setItemName(e.target.value)} required />\r\n                        </InputGroup>\r\n                        {/* Item Category */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text id=\"basic-addon1\">Item Category</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl as='select' className='form-select'\r\n                                onChange={(e) => setItemCategory(e.target.value)} value={itemCategory}>\r\n                                <option value='Drinks'>Drinks</option>\r\n                                <option value='Food'>Food</option>\r\n                                <option value='Fruits'>Fruits</option>\r\n                                <option value='Snacks'>Snacks</option>\r\n                                <option value='Others'>Others</option>\r\n\r\n                            </FormControl>\r\n                        </InputGroup>\r\n                        {/* Item Price */}\r\n                        <InputGroup className=\"mt-2\">\r\n                            <CurrencyInput\r\n                                className='w-100'\r\n                                placeholder=\"S$\"\r\n                                decimalsLimit={2}\r\n                                prefix='S$'\r\n                                onValueChange={(value) => {\r\n                                    setItemPrice(value)\r\n                                }} required />\r\n                        </InputGroup>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"success\" type='submit'>Add Item</Button>\r\n\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Spinner, Col, Row, Button } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport TableView from './TableView';\r\nimport InsertItem from './InsertItem';\r\nimport { Link } from \"react-router-dom\";\r\nimport customLogo from '../../customLogo.png'\r\nexport default function Main() {\r\n\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [data, setData] = useState([]);\r\n\r\n    // Data Management for itemList\r\n    // Get All Data\r\n    async function fetchData() {\r\n        const result = await axios(`/api/getall`).catch(error => {\r\n            console.log(error)\r\n        });\r\n        setData(result.data);\r\n        setLoaded(true)\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    //  Insert Data\r\n    async function insertData(newEntry) {\r\n        axios.post(`/api/insert`, newEntry)\r\n            .then(res => {\r\n                newEntry['_id'] = res.data\r\n                // Redundant step but here due to slow mongoDB Cluster\r\n                let newData = JSON.parse(JSON.stringify(data))\r\n                newData.push(newEntry)\r\n                setData(newData)\r\n                // Real fetch and refresh from DB Cluster\r\n                fetchData()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    //  Edit Data\r\n    async function editData(entry) {\r\n        // Redundant step but here due to slow mongoDB Cluster\r\n        let newData = JSON.parse(JSON.stringify(data))\r\n        let dataIndex = newData.findIndex((item => item._id === entry._id));\r\n        newData[dataIndex] = entry\r\n        setData(newData)\r\n        // Real fetch and refresh from DB Cluster\r\n        axios.put(`/api/update`, entry)\r\n            .then(res => {\r\n                fetchData()\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    //  Delete Data\r\n    async function deleteData(deletedId) {\r\n        // Redundant step but here due to slow mongoDB Cluster\r\n        let newData = JSON.parse(JSON.stringify(data))\r\n        newData = newData.filter(function (item) {\r\n            return item._id !== deletedId;\r\n        });\r\n        setData(newData)\r\n        // Real delete and refresh from DB Cluster\r\n        axios.delete(`/api/delete`, { data: { _id: deletedId } })\r\n            .then(res => fetchData())\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    // Elements\r\n    return <div style={{ height: '100vh', width: '100vw' }} >\r\n        {loaded ? <div style={{width:'95%'}} className=\"h-100 d-flex align-items-start flex-column mx-auto\" >\r\n            <Row className='py-1 w-100'>\r\n                {/* Create New Item */}\r\n                <Col xs={4} className='mt-auto'><InsertItem insertData={insertData} /></Col>\r\n                {/* Logo*/}\r\n                <Col xs={4} align='center'><img className='d-none d-lg-block' alt=\"\" src={customLogo} width=\"200\" height=\"100\" /></Col>\r\n            </Row>\r\n            <div style={{ height: '100%', width:'100%', overflowX:'auto', overflowY: 'auto' }}>\r\n                {/* Table List View*/}\r\n                <TableView deleteData={deleteData} editData={editData} data={data} />\r\n            </div>\r\n        </div>\r\n\r\n            /*Show Page Loading*/\r\n            : <div className='h-100 w-100 d-flex'>\r\n                <Spinner className='mx-auto my-auto' animation='border' variant='success' />\r\n            </div>\r\n        }\r\n        {/* Link to user View */}\r\n        <Link to=\"/\"><Button style={{ position: 'absolute', top: '10px', right: '10px' }} variant='outline-success'> Go To User View</Button></Link>\r\n    </div >\r\n\r\n};\r\n","import './App.css';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport UserMain from './components/User/Main'\nimport AdminMain from './components/Admin/Main';\n\nexport default function App() {\n  return (\n    <Router>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/admin\">\n            <AdminMain />\n          </Route>\n          <Route exact path=\"/\">\n            <UserMain />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}